let accordionItemBtn = document.querySelectorAll(".accordion__item-btn");
accordionItemBtn.forEach((e => { e.addEventListener("click", (() => { e.parentElement.classList.toggle("active"); })); }));
let modalBoxAnswer = document.querySelectorAll(".modal__box-answer");
modalBoxAnswer.forEach((e => { e.addEventListener("click", (() => { e.classList.toggle("active"); })); }));
let modalBoxClose = document.querySelectorAll(".modal__box-close");
//modalBoxClose.forEach((e => { e.addEventListener("click", (() => { modalBox.forEach((e => { e.classList.remove("active"); })), document.querySelector(".modal__box").classList.add("active"), modalBoxAnswer.forEach((e => { e.classList.remove("active"); })); })); }));
let modalBoxBtn = document.querySelectorAll(".modal__box-btn"),
    modalBox = document.querySelectorAll(".modal__box");
let activeModal = document.querySelector(".modal__box.active");

let formClose = document.querySelectorAll("#formClose");
formClose.forEach((e => { e.addEventListener("click", (() => {
    document.querySelector('#form').style.display = 'none';
    modalBoxAnswer.forEach((e) => {
      e.classList.remove('active');
    });
   }));
}));

let modalBtns = document.querySelectorAll('a[href="#modal"]');
modalBtns.forEach((element) => {
  element.addEventListener('click', () => {
    document.querySelector('#modal').style.display = 'block';
  });
});

modalBoxClose.forEach((element) => {
  element.addEventListener('click', () => {
    document.querySelector('#modal').style.display = 'none';
  });
});

let formBtns = document.querySelectorAll('a[href="#form"]');
formBtns.forEach((element) => {
  element.addEventListener('click', () => {
    document.querySelector('#form').style.display = 'block';
    document.querySelector('#form .modal__box').classList.add('active');
  });
});

let marriageCheck = "";
const totalPriceBlock = document.getElementById('totalPrice');

modalBoxBtn.forEach((btn, i) => {
  btn.addEventListener("click", () => {
    // получаем выбранный вариант ответа на текущем шаге
    const currentAnswerText = document.querySelector('.modal__box.active .modal__box-answer.active')?.textContent.trim();
    const currentQuestionText = document.querySelector('.modal__box.active .modal__box-question')?.textContent.trim();

    if(currentQuestionText === 'Нужна ли проверка на брак?'){
      if(currentAnswerText === 'Да'){
        marriageCheck = "true";
      }else{
        marriageCheck = "false";
      }
    }

    if (currentQuestionText === 'Кто доставляет груз на Наш склад') {
      if(currentAnswerText === 'Вы своими силами'){
        activeModal.classList.remove("active");
        activeModal = modalBox[i+2];
        modalBox[i+2].classList.add("active");
      }else{
        activeModal.classList.remove("active");
        activeModal = modalBox[i+1];
        modalBox[i+1].classList.add("active");
      }
    } else if (currentQuestionText === 'Кто создаёт поставку в Вашем ЛК'){
      if(currentAnswerText === 'Вы сами'){
        activeModal.classList.remove("active");
        activeModal = modalBox[i+2];
        modalBox[i+2].classList.add("active");
      }else{
        activeModal.classList.remove("active");
        activeModal = modalBox[i+1];
        modalBox[i+1].classList.add("active");
      }
    } else if(currentQuestionText === 'Требуется погрузка?'){
      activeModal.classList.remove("active");
      if(currentAnswerText === 'Да'){
        //удалали райт
        activeModal = modalBox[i+1];
        modalBox[i+1].classList.add("active");
      } else {
        activeModal = modalBox[i+2];
        modalBox[i+2].classList.add("active");
      }
      modalBox = document.querySelectorAll(".modal__box");
    } else if (currentQuestionText === 'Что грузим') {
      //расчет итога
      let totalPrice = calculateTotalPrice();
      totalPriceBlock.textContent = totalPrice;

      activeModal.classList.remove("active");
      activeModal = modalBox[i+3];
      modalBox[i+3].classList.add("active");
    } else if (currentQuestionText === 'Куда доставляем?') {
      //расчет итога
      let totalPrice = calculateTotalPrice();
      totalPriceBlock.textContent = totalPrice;

      activeModal.classList.remove("active");
      activeModal = modalBox[i+1];
      modalBox[i+1].classList.add("active");
    } else {
      // выбран другой ответ
      // убираем класс active у текущего блока
      activeModal.classList.remove("active");
      
      // добавляем класс active следующему блоку
      modalBox[i+1].classList.add("active");
      
      // устанавливаем новый active для последующих кликов
      activeModal = modalBox[i+1];
    }
  });
});

//запись ответов
// получаем все кнопки
const btns = document.querySelectorAll('.modal__box-answer');
const questionText = "";

// хранит ссылки на span-элементы для каждого вопроса
const answerEls = {};

const totalTableName = document.querySelector("#totalTableName");
const totalTableCol = document.querySelector("#totalTableCol");
let selectedAnswer = {}; // объект для хранения выбранных ответов

// создаем span-элементы для каждого вопроса и сохраняем их в answerEls
btns.forEach(btn => {
  const question = btn.getAttribute("data-question");
  const questionClass = "question-" + transliterate(question);

  if (!selectedAnswer[questionClass]) {
    selectedAnswer[questionClass] = {
      question: question,
      answer: "",
      price: 0,
      elements: {
        questionElement: null,
        answerElement: null,
      }
    };
  }

  btn.addEventListener('click', () => {
    const answerText = btn.textContent.trim();

    const answersInBlock = btn.parentElement.querySelectorAll('.modal__box-answer');
    answersInBlock.forEach(answer => {
      if (answer !== btn && answer.classList.contains('active')) {
        answer.classList.remove('active');
      }
    });

    const questionElement = selectedAnswer[questionClass].elements.questionElement;
    const answerElement = selectedAnswer[questionClass].elements.answerElement;

    if (questionElement && answerElement) {
      questionElement.textContent = `${questionText}${question} - ${answerText}`;
      answerElement.textContent = calculatePrice(question, answerText);
    } else {
      const newQuestion = document.createElement('div');
      newQuestion.classList.add("question__text");
      newQuestion.classList.add("price__table-item_name");
      newQuestion.classList.add(`question-${transliterate(question)}`);
      newQuestion.textContent = `${questionText}${question} - ${answerText}`;

      const newAnswer = document.createElement('div');
      newAnswer.classList.add("answer");
      newAnswer.classList.add("question__text");
      newAnswer.classList.add(`answer-${transliterate(question)}`);
      newAnswer.classList.add("price__table-item_name");
      newAnswer.textContent = calculatePrice(question, answerText);

      totalTableName.appendChild(newQuestion);
      totalTableCol.appendChild(newAnswer);

      selectedAnswer[questionClass].elements.questionElement = newQuestion;
      selectedAnswer[questionClass].elements.answerElement = newAnswer;
    }

    selectedAnswer[questionClass].answer = answerText;
    selectedAnswer[questionClass].price = calculatePrice(question, answerText);

    // удаляем или меняем инпут в зависимости от наличия уже имеющегося инпута
    const existingInput = document.querySelector(`input[name="answer[${question}]`);
    if (existingInput) {
      existingInput.value = answerText;
    } else {
      const newInput = document.createElement('input');
      newInput.type = 'hidden';
      newInput.name = `answer[${question}]`; 
      newInput.value = answerText;
      document.querySelector('.modal__box-form').appendChild(newInput);
    }

    btn.classList.add('active');
  });
});

//Коллво товара
let productQtyPrice = 0;
let productQty = document.querySelector('#product_qty');
productQty.addEventListener('input', function() {
  let product__qty_name = document.querySelector(".product__qty_name");
  let product__qty_sum = document.querySelector(".product__qty_sum");

  if(product__qty_name && product__qty_sum){
    //тут меняем цифры
    product__qty_name.textContent = "Количество товара к упаковке - " + productQty.value;
    product__qty_sum.textContent = productQty.value * 6 + "";
  }else{
    const newProductQty = document.createElement('div');
    newProductQty.classList.add("product__qty_name");
    newProductQty.classList.add("question__text");
    newProductQty.classList.add("price__table-item_name");
    newProductQty.textContent = "Количество товара к упаковке - " + productQty.value;

    //Сюда добавляем сумму из инпута создаем или меняем
    const newProductQtyPrice = document.createElement('div');
    newProductQtyPrice.classList.add("answer");
    newProductQtyPrice.classList.add("product__qty_sum");
    newProductQtyPrice.classList.add("question__text");
    newProductQtyPrice.classList.add("price__table-item_name");
    newProductQtyPrice.textContent = productQty.value * 6 + "";

    totalTableName.appendChild(newProductQty);
    totalTableCol.appendChild(newProductQtyPrice);
  }
  productQtyPrice = productQty.value * 6;
});

let in_one_box = document.querySelector("#in_one_box");
let in_one_box_price = 0;

in_one_box.addEventListener('input', function() {
  let product__qty_name = document.querySelector(".in_one_box_name");
  let product__qty_sum = document.querySelector(".in_one_box_sum");

  if(product__qty_name && product__qty_sum){
    //тут меняем цифры
    product__qty_name.textContent = "Сколько штук влазит в 1 короб 60х40х40? - " + in_one_box.value;
    product__qty_sum.textContent = productQty.value / in_one_box.value + "";
  }else{
    const newInOneBoxQty = document.createElement('div');
    newInOneBoxQty.classList.add("in_one_box_name");
    newInOneBoxQty.classList.add("question__text");
    newInOneBoxQty.classList.add("price__table-item_name");
    newInOneBoxQty.textContent = "Сколько штук влазит в 1 короб 60х40х40? - " + in_one_box.value;

    //Сюда добавляем сумму из инпута создаем или меняем
    const newInOneBoxPrice = document.createElement('div');
    newInOneBoxPrice.classList.add("answer");
    newInOneBoxPrice.classList.add("in_one_box_sum");
    newInOneBoxPrice.classList.add("question__text");
    newInOneBoxPrice.classList.add("price__table-item_name");
    newInOneBoxPrice.textContent = productQty.value / in_one_box.value + "";

    totalTableName.appendChild(newInOneBoxQty);
    totalTableCol.appendChild(newInOneBoxPrice);
  }
  in_one_box_price = productQty.value / in_one_box.value;
});

let negotiable = false;

function calculatePrice(question, answer) {
  // Логика для определения цены на основе выбранных ответов
  if (question === "Откуда забираем") {
    if (answer === "Южные Ворота") {
      return 1500;
    } else if (answer === "ТЯК Москва") {
      return 2500;
    }
  } else if (question === "Колличество товара к упаковке") {
    if (answer === "3000 и более") {
      return 7;
    } else {
      return 8;
    }
  } else if (question === "Нужна ли проверка на брак?") {
    if(answer == "Да"){
      let sum = productQty.value*5;
      return Math.ceil(sum);
    }else{
      let sum = (productQty.value*5)*6;
      return Math.ceil(sum);
    }
  } else if (question === "Выберите материалы для упаковки") {
    if(answer === "БОПП пакет" || answer === "ЗипЛок") {
      return Math.ceil(6 * productQty.value);
    } else if(answer === "Пузырчатая плёнка" || answer === "Крафтовая бумага") {
      return Math.ceil(8 * productQty.value);
    } else if(answer === "Отдельный короб") {
      return Math.ceil(25 * productQty.value);
    }
  } else if (question === "Колличество этикеток при маркировке") {
    if(answer === "1 этикетка"){
      return Math.ceil(3 * productQty.value);
    } else if(answer === "2 этикетки"){
      return Math.ceil(6 * productQty.value);
    } else if(answer === "3 этикетки"){
      return Math.ceil(9 * productQty.value);
    }
  } else if (question === "Нужны ли вложения?") {
    if(answer === "Да"){
      return Math.ceil(productQty.value * 5);
    }
  } else if (question === "Сколько штук влазит в 1 короб 60х40х40?") {
    return Math.ceil(productQty.value / in_one_box.value);
  } else if (question === "Как доставляем товар") {
    if(answer === "В коробе 60х40х40"){
      //3 шаг делим на 8 и умножаем на 140
      return (productQty.value / in_one_box.value) * 140;
    } else if(answer === "Паллета + короб 60х40х40 16шт"){
      // 20/16=1,25 округляем к 2 и умножаем 2*2740
      //  == 20
      let qtyToOneBox = Math.ceil((productQty.value / in_one_box.value)/16);
      return qtyToOneBox*2740;
    } else {
      // если возвращает 0 то ставим везде договрная
      negotiable = true;
      return 0;
    }
    //во всех других вариантах ставим цену в Договорная и в итог ее тоже

    //Осталось сделать разветвление на левый и правый блок!!!!!
    
  } else if (question === "Количество артикулов в поставке") {
      if ( answer === "До 10" ){
        return 1000;
      } else if (answer === "10-20"){
        return 2000;
      } else if (answer === "20 и более"){
        return 3000;
      }
  } else if (question === "Что грузим") {
    if( answer === "Паллета" ) {
        return Math.ceil(productQty.value / in_one_box.value) * 300;
    } else if( answer === "Короб" ) {
      return Math.ceil(productQty.value / in_one_box.value) * 100;
    }
  } else if (question === "Куда доставляем") {
    if(answer === "Электросталь"){
      return Math.ceil(2000 * (productQty.value / in_one_box.value));
    } else if(answer === "Коледино") {
      return Math.ceil(400 * (productQty.value / in_one_box.value));
    } else if(answer === "СЦ Пушкино"){
      return Math.ceil(200 * (productQty.value / in_one_box.value));
    }
  }
  // Возвращаем цену по умолчанию, если не заданы специальные условия
  return 0;
}

function calculateTotalPrice() {
  let totalPrice = 0;
  for (const questionClass in selectedAnswer) {
    totalPrice += selectedAnswer[questionClass].price;
  }
  //добавляем цену из инпута
  if(productQtyPrice != 0){
    totalPrice += productQtyPrice;

    if(marriageCheck == "true"){
      totalPrice -= productQtyPrice;
      let sum = productQtyPrice*5;
      totalPrice += Math.ceil(sum);
    } else if (marriageCheck == "false"){
      totalPrice -= productQtyPrice;
      let sum = (productQtyPrice*5)*6;
      totalPrice += Math.ceil(sum);
    }
    productQtyPrice = 0;
  }

  totalPrice += in_one_box_price;

  //если договорная
  if(negotiable){
    return "Договорная цена";
  }

  return totalPrice + " ₽";
}


function transliterate(text) {
  const translitMap = {
    "Ё": "YO",
    "Й": "I",
    "Ц": "TS",
    "У": "U",
    "К": "K",
    "Е": "E",
    "Н": "N",
    "Г": "G",
    "Ш": "SH",
    "Щ": "SCH",
    "З": "Z",
    "Х": "H",
    "Ъ": "",
    "ё": "yo",
    "й": "i",
    "ц": "ts",
    "у": "u",
    "к": "k",
    "е": "e",
    "н": "n",
    "г": "g",
    "ш": "sh",
    "щ": "sch",
    "з": "z",
    "х": "h",
    "ъ": "",
    "Ф": "F",
    "Ы": "Y",
    "В": "V",
    "А": "A",
    "П": "P",
    "Р": "R",
    "О": "O",
    "Л": "L",
    "Д": "D",
    "Ж": "ZH",
    "Э": "E",
    "ф": "f",
    "ы": "y",
    "в": "v",
    "а": "a",
    "п": "p",
    "р": "r",
    "о": "o",
    "л": "l",
    "д": "d",
    "ж": "zh",
    "э": "e",
    "Я": "YA",
    "Ч": "CH",
    "С": "S",
    "М": "M",
    "И": "I",
    "Т": "T",
    "Ь": "",
    "Б": "B",
    "Ю": "YU",
    "я": "ya",
    "ч": "ch",
    "с": "s",
    "м": "m",
    "и": "i",
    "т": "t",
    "ь": "",
    "б": "b",
    "ю": "yu"
  };
  
  return text.replace(/[ЁЙЦУКЕНГШЩЗХЪёйцукенгшщзхъФЫВАПРОЛДЭфывапролджэЯЧСМИТЬБЮ]/g, function(match) {
    return translitMap[match];
  }).replace(/[\s]/g, "-");
}



let backBtn = document.querySelectorAll(".modal__box-back");

backBtn.forEach((btn, i) => {
  btn.addEventListener("click", () => {
    activeModal.classList.remove("active");
    modalBox[i].classList.add("active");
    activeModal = modalBox[i]; 
  });
});